// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var company = Company.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Number
    {
        [JsonProperty("count")]
        public long Count { get; set; }
    }

    public partial class Company
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("identifier")]
        public string Identifier { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("status")]
        public Status Status { get; set; }

        [JsonProperty("addressLine1", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressLine1 { get; set; }

        [JsonProperty("city")]
        public string City { get; set; }

        [JsonProperty("state", NullValueHandling = NullValueHandling.Ignore)]
        public string State { get; set; }

        [JsonProperty("zip")]
        public string Zip { get; set; }

        [JsonProperty("country", NullValueHandling = NullValueHandling.Ignore)]
        public Country Country { get; set; }

        [JsonProperty("phoneNumber")]
        public string PhoneNumber { get; set; }

        [JsonProperty("faxNumber")]
        public string FaxNumber { get; set; }

        [JsonProperty("website")]
        public string Website { get; set; }

        [JsonProperty("territory")]
        public Territory Territory { get; set; }

        [JsonProperty("market", NullValueHandling = NullValueHandling.Ignore)]
        public Market Market { get; set; }

        [JsonProperty("accountNumber")]
        public string AccountNumber { get; set; }

        [JsonProperty("defaultContact", NullValueHandling = NullValueHandling.Ignore)]
        public Contact DefaultContact { get; set; }

        [JsonProperty("dateAcquired")]
        public DateTimeOffset DateAcquired { get; set; }

        [JsonProperty("annualRevenue")]
        public long AnnualRevenue { get; set; }

        [JsonProperty("timeZoneSetup")]
        public TimeZoneSetup TimeZoneSetup { get; set; }

        [JsonProperty("leadFlag")]
        public bool LeadFlag { get; set; }

        [JsonProperty("unsubscribeFlag")]
        public bool UnsubscribeFlag { get; set; }

        [JsonProperty("userDefinedField1", NullValueHandling = NullValueHandling.Ignore)]
        public string UserDefinedField1 { get; set; }

        [JsonProperty("vendorIdentifier", NullValueHandling = NullValueHandling.Ignore)]
        public string VendorIdentifier { get; set; }

        [JsonProperty("taxIdentifier", NullValueHandling = NullValueHandling.Ignore)]
        public string TaxIdentifier { get; set; }

        [JsonProperty("taxCode")]
        public TaxCode TaxCode { get; set; }

        [JsonProperty("billingTerms")]
        public BillingTerms BillingTerms { get; set; }

        [JsonProperty("billToCompany")]
        public BillToCompany BillToCompany { get; set; }

        [JsonProperty("billingSite", NullValueHandling = NullValueHandling.Ignore)]
        public Site BillingSite { get; set; }

        [JsonProperty("billingContact", NullValueHandling = NullValueHandling.Ignore)]
        public Contact BillingContact { get; set; }

        [JsonProperty("invoiceDeliveryMethod")]
        public BillingTerms InvoiceDeliveryMethod { get; set; }

        [JsonProperty("invoiceToEmailAddress", NullValueHandling = NullValueHandling.Ignore)]
        public string InvoiceToEmailAddress { get; set; }

        [JsonProperty("deletedFlag")]
        public bool DeletedFlag { get; set; }

        [JsonProperty("mobileGuid")]
        public Guid MobileGuid { get; set; }

        [JsonProperty("currency", NullValueHandling = NullValueHandling.Ignore)]
        public Currency Currency { get; set; }

        [JsonProperty("territoryManager")]
        public TerritoryManager TerritoryManager { get; set; }

        [JsonProperty("isVendorFlag")]
        public bool IsVendorFlag { get; set; }

        [JsonProperty("types")]
        public List<OwnershipTypeClass> Types { get; set; }

        [JsonProperty("site")]
        public Site site { get; set; }

        public List<Site> sitelist { get; set; }

      

        [JsonProperty("_info")]
        public CompanyInfo Info { get; set; }

        [JsonProperty("addressLine2", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressLine2 { get; set; }

        [JsonProperty("leadSource", NullValueHandling = NullValueHandling.Ignore)]
        public string LeadSource { get; set; }

        [JsonProperty("ownershipType", NullValueHandling = NullValueHandling.Ignore)]
        public OwnershipTypeClass OwnershipType { get; set; }

        [JsonProperty("numberOfEmployees", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumberOfEmployees { get; set; }

        [JsonProperty("revenueYear", NullValueHandling = NullValueHandling.Ignore)]
        public long? RevenueYear { get; set; }

        [JsonProperty("calendar", NullValueHandling = NullValueHandling.Ignore)]
        public Calendar Calendar { get; set; }

        [JsonProperty("resellerIdentifier", NullValueHandling = NullValueHandling.Ignore)]
        public string ResellerIdentifier { get; set; }

        [JsonProperty("dateDeleted", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DateDeleted { get; set; }

        [JsonProperty("deletedBy", NullValueHandling = NullValueHandling.Ignore)]
        public string DeletedBy { get; set; }

        [JsonProperty("userDefinedField2", NullValueHandling = NullValueHandling.Ignore)]
        public string UserDefinedField2 { get; set; }
    }

    public partial class BillToCompany
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("identifier")]
        public string Identifier { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public BillToCompanyInfo Info { get; set; }
    }

    public partial class BillToCompanyInfo
    {
        [JsonProperty("company_href")]
        public Uri CompanyHref { get; set; }
    }

    public partial class Contact
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public BillingContactInfo Info { get; set; }
    }

    public partial class BillingContactInfo
    {
        [JsonProperty("contact_href")]
        public Uri ContactHref { get; set; }
    }

    public partial class Site
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("addressLine1", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressLine1 { get; set; }

        [JsonProperty("city")]
        public string City { get; set; }

        [JsonProperty("stateReference", NullValueHandling = NullValueHandling.Ignore)]
        public StateReference StateReference { get; set; }

        [JsonProperty("zip")]
        public string Zip { get; set; }

        [JsonProperty("country")]
        public Country Country { get; set; }

        [JsonProperty("addressFormat")]
        public string AddressFormat { get; set; }

        [JsonProperty("phoneNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string PhoneNumber { get; set; }

        [JsonProperty("faxNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string FaxNumber { get; set; }

        [JsonProperty("taxCode", NullValueHandling = NullValueHandling.Ignore)]
        public TaxCode TaxCode { get; set; } 

        [JsonProperty("expenseReimbursement", NullValueHandling = NullValueHandling.Ignore)]
        public long? ExpenseReimbursement { get; set; }

        [JsonProperty("primaryAddressFlag")]
        public bool PrimaryAddressFlag { get; set; }

        [JsonProperty("defaultShippingFlag")]
        public bool DefaultShippingFlag { get; set; }

        [JsonProperty("defaultBillingFlag")]
        public bool DefaultBillingFlag { get; set; }

        [JsonProperty("defaultMailingFlag")]
        public bool DefaultMailingFlag { get; set; }

        [JsonProperty("inactiveFlag")]
        public bool InactiveFlag { get; set; }

        [JsonProperty("billSeparateFlag")]
        public bool BillSeparateFlag { get; set; }

        [JsonProperty("mobileGuid")]
        public Guid MobileGuid { get; set; }

        //[JsonProperty("timeZone", NullValueHandling = NullValueHandling.Ignore)]
        //public TimeZone TimeZone { get; set; }

        [JsonProperty("company")]
        public Company Company { get; set; }

        [JsonProperty("_info")]
        public SiteInfo Info { get; set; }

        [JsonProperty("addressLine2", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressLine2 { get; set; }

        public string newSiteName { get; set; }

        public bool isDuplicate { get; set; }

        public bool isValid { get; set; }

        public long DuplicateOf { get; set; }
        
        public bool hasPrimFlag { get; set; }

        public bool hasBillFlag { get; set; }
        
        public bool hasShipFlag { get; set; }

        public bool hasMailFlag { get; set; }



    }

    public partial class SiteInfo
    {
        [JsonProperty("lastUpdated")]
        public DateTimeOffset LastUpdated { get; set; }

        [JsonProperty("updatedBy")]
        public string UpdatedBy { get; set; }

        [JsonProperty("dateEntered")]
        public DateTimeOffset DateEntered { get; set; }

        [JsonProperty("enteredBy")]
        public string EnteredBy { get; set; }
    }

    public partial class StateReference
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("identifier")]
        public string Identifier { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public StateReferenceInfo Info { get; set; }
    }

    public partial class StateReferenceInfo
    {
        [JsonProperty("state_href")]
        public Uri StateHref { get; set; }
    }

    public partial class BillingSiteInfo
    {
        [JsonProperty("site_href")]
        public Uri SiteHref { get; set; }
    }

    public partial class BillingTerms
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class Calendar
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public CalendarInfo Info { get; set; }
    }

    public partial class CalendarInfo
    {
        [JsonProperty("calendar_href")]
        public Uri CalendarHref { get; set; }
    }

    public partial class Country
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public CountryInfo Info { get; set; }
    }

    public partial class CountryInfo
    {
        [JsonProperty("country_href")]
        public Uri CountryHref { get; set; }
    }

    public partial class Currency
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("symbol")]
        public string Symbol { get; set; }

        [JsonProperty("currencyCode")]
        public string CurrencyCode { get; set; }

        [JsonProperty("decimalSeparator")]
        public string DecimalSeparator { get; set; }

        [JsonProperty("numberOfDecimals")]
        public long NumberOfDecimals { get; set; }

        [JsonProperty("thousandsSeparator")]
        public string ThousandsSeparator { get; set; }

        [JsonProperty("negativeParenthesesFlag")]
        public bool NegativeParenthesesFlag { get; set; }

        [JsonProperty("displaySymbolFlag")]
        public bool DisplaySymbolFlag { get; set; }

        [JsonProperty("currencyIdentifier")]
        public string CurrencyIdentifier { get; set; }

        [JsonProperty("displayIdFlag")]
        public bool DisplayIdFlag { get; set; }

        [JsonProperty("rightAlign")]
        public bool RightAlign { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public CurrencyInfo Info { get; set; }
    }

    public partial class CurrencyInfo
    {
        [JsonProperty("currency_href")]
        public Uri CurrencyHref { get; set; }
    }

    public partial class CompanyInfo
    {
        [JsonProperty("lastUpdated")]
        public DateTimeOffset LastUpdated { get; set; }

        [JsonProperty("updatedBy")]
        public string UpdatedBy { get; set; }

        [JsonProperty("dateEntered")]
        public DateTimeOffset DateEntered { get; set; }

        [JsonProperty("enteredBy")]
        public string EnteredBy { get; set; }

        [JsonProperty("contacts_href")]
        public Uri ContactsHref { get; set; }

        [JsonProperty("agreements_href")]
        public Uri AgreementsHref { get; set; }

        [JsonProperty("tickets_href")]
        public Uri TicketsHref { get; set; }

        [JsonProperty("opportunities_href")]
        public Uri OpportunitiesHref { get; set; }

        [JsonProperty("activities_href")]
        public Uri ActivitiesHref { get; set; }

        [JsonProperty("projects_href")]
        public Uri ProjectsHref { get; set; }

        [JsonProperty("configurations_href")]
        public Uri ConfigurationsHref { get; set; }

        [JsonProperty("orders_href")]
        public Uri OrdersHref { get; set; }

        [JsonProperty("documents_href")]
        public Uri DocumentsHref { get; set; }

        [JsonProperty("sites_href")]
        public Uri SitesHref { get; set; }

        [JsonProperty("teams_href")]
        public Uri TeamsHref { get; set; }

        [JsonProperty("reports_href")]
        public Uri ReportsHref { get; set; }

        [JsonProperty("notes_href")]
        public Uri NotesHref { get; set; }
    }

    public partial class Market
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public MarketInfo Info { get; set; }
    }

    public partial class MarketInfo
    {
        [JsonProperty("Market_href")]
        public Uri MarketHref { get; set; }
    }

    public partial class OwnershipTypeClass
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public OwnershipTypeInfo Info { get; set; }
    }

    public partial class OwnershipTypeInfo
    {
        [JsonProperty("type_href")]
        public Uri TypeHref { get; set; }
    }

    public partial class Status
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public StatusInfo Info { get; set; }
    }

    public partial class StatusInfo
    {
        [JsonProperty("status_href")]
        public Uri StatusHref { get; set; }
    }

    public partial class TaxCode
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public TaxCodeInfo Info { get; set; }

    }

    public partial class TaxCodeInfo
    {
        [JsonProperty("taxCode_href")]
        public Uri TaxCodeHref { get; set; }
    }

    public partial class Territory
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public TerritoryInfo Info { get; set; }
    }

    public partial class TerritoryInfo
    {
        [JsonProperty("location_href")]
        public Uri LocationHref { get; set; }
    }

    public partial class TerritoryManager
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("identifier")]
        public string Identifier { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public TerritoryManagerInfo Info { get; set; }
    }

    public partial class TerritoryManagerInfo
    {
        [JsonProperty("member_href")]
        public Uri MemberHref { get; set; }
    }

    public partial class TimeZoneSetup
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_info")]
        public TimeZoneSetupInfo Info { get; set; }
    }

    public partial class TimeZoneSetupInfo
    {
        [JsonProperty("timeZoneSetup_href")]
        public Uri TimeZoneSetupHref { get; set; }
    }

    public partial class Company
    {
        public static List<Company> FromJson(string json) => JsonConvert.DeserializeObject<List<Company>>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Company> self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
